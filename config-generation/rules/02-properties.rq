PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
CONSTRUCT {
    ?p a owl:ObjectProperty .
    # set property as an autocomplete property by default
    ?p rdfs:subPropertyOf <http://data.sparna.fr/ontologies/sparnatural-config-core#AutocompleteProperty> .
    ?p rdfs:domain ?class .
    ?p rdfs:range ?classO .
    ?p rdfs:label ?label .
}
WHERE {
    ?s rdf:type ?class .
    ?s ?p ?o .
    # exclude rdf:type 
    FILTER(?p NOT IN (rdf:type))
    # only properties that connect 2 entities
    FILTER(isIRI(?o))
    # fetch type of value
    ?o rdf:type ?classO .

    FILTER(?class NOT IN(
        rdf:List,
        rdf:Property,
        rdfs:Class,
        owl:Class,
        owl:SymmetricProperty,
        owl:TransitiveProperty,
        rdfs:Datatype,
        rdfs:ContainerMembershipProperty,
        owl:NamedIndividual,
        owl:AnnotationProperty,
        owl:ObjectProperty,
        owl:DatatypeProperty,
        owl:Ontology))

    FILTER(?classO NOT IN(
        rdf:List,
        rdf:Property,
        rdfs:Class,
        owl:Class,
        owl:SymmetricProperty,
        owl:TransitiveProperty,
        rdfs:Datatype,
        rdfs:ContainerMembershipProperty,
        owl:NamedIndividual,
        owl:AnnotationProperty,
        owl:ObjectProperty,
        owl:DatatypeProperty,
        owl:Ontology))

    # fetch label of property
    OPTIONAL { ?p rdfs:label ?propertyLabel }
    BIND(IF(BOUND(?propertyLabel),
        ?propertyLabel,
        IF(CONTAINS(str(?p), '#'),
            STRAFTER(str(?p),"#"),
            # replace everything before last slash by nothing
            REPLACE(str(?p), "^.*/", '')
        )
    ) AS ?label). 
}